{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abdul\\\\Masa\\xFCst\\xFC\\\\01-starting-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useReducer, useState } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { Context1 } from \"../store/Store\";\nimport Inputs from \"./Inputs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ACTION = {\n  INPUT_CHANGE: \"input_change\",\n  INPUT_ISVALID: \"input_isValid\"\n};\nconst reducerEmail = (emailState, action) => {\n  switch (action.type) {\n    case ACTION.INPUT_CHANGE:\n      {\n        return {\n          value: action.Payload.value1,\n          isValid: action.Payload.value1.includes(\"@\")\n        };\n      }\n    case ACTION.INPUT_ISVALID:\n      {\n        return {\n          value: emailState.value,\n          isValid: emailState.value.includes(\"@\")\n        };\n      }\n    default:\n      return {\n        value: \"\",\n        isValid: false\n      };\n  }\n};\nconst reducerPassword = (passwordState, action) => {\n  switch (action.type) {\n    case ACTION.INPUT_CHANGE:\n      return {\n        value: action.Payload.value2,\n        isValid: action.Payload.value2.trim().length > 6\n      };\n    case ACTION.INPUT_ISVALID:\n      return {\n        value: passwordState.value,\n        isValid: passwordState.value.trim().length > 6\n      };\n    default:\n      return {\n        value: \"\",\n        isValid: false\n      };\n  }\n};\nconst Login = () => {\n  _s();\n  const ctx = useContext(Context1);\n  const [emailState, dispatchEmail] = useReducer(reducerEmail, {\n    value: \"\",\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(reducerPassword, {\n    value: \"\",\n    isValid: null\n  });\n\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: ACTION.INPUT_CHANGE,\n      Payload: {\n        value1: event.target.value\n      }\n    });\n    // setEnteredEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = event => {\n    // setEnteredPassword(event.target.value);\n    dispatchPassword({\n      type: ACTION.INPUT_CHANGE,\n      Payload: {\n        value2: event.target.value\n      }\n    });\n  };\n  const onBlurHandlerEmail = () => {\n    dispatchEmail({\n      type: ACTION.INPUT_ISVALID\n    });\n  };\n  const onBlurHandlerPassword = () => {\n    dispatchPassword({\n      type: ACTION.INPUT_ISVALID\n    });\n  };\n  const {\n    isValid: forEmailValid\n  } = emailState;\n  const {\n    isValid: forpasswordValid\n  } = passwordState;\n  useEffect(() => {\n    console.log(\"time1\");\n    const timeoutID = setTimeout(() => {\n      console.log(\"time2\");\n      setFormIsValid(forEmailValid && forpasswordValid);\n    }, 100);\n    return () => {\n      console.log(\"returnPart\");\n      clearTimeout(timeoutID);\n    };\n  }, [forEmailValid, forpasswordValid]);\n\n  // const validatePasswordHandler = () => {\n  //   // setPasswordIsValid(enteredPassword.trim().length > 6);\n  //   dispatchPassword({ type: ACTION.INPUT_ISVALID });\n  // };\n\n  // const validateEmailHandler = () => {\n  //   dispatchEmail({ type: ACTION.INPUT_ISVALID });\n  //   // setEmailIsValid(emailState.value.includes(\"@\"));\n  // };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    if (forEmailValid && forpasswordValid) {\n      ctx.loginHandler(emailState.value, passwordState.value);\n    } else if (!forEmailValid) {}\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Inputs, {\n        StateType: emailState,\n        htmlfor: \"email\",\n        typ: \"email\",\n        idd: \"email\",\n        ChangeHandler: emailChangeHandler,\n        onBlur: onBlurHandlerEmail,\n        text: \"E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n        StateType: passwordState,\n        htmlfor: \"password\",\n        typ: \"password\",\n        idd: \"password\",\n        ChangeHandler: passwordChangeHandler,\n        onBlur: onBlurHandlerPassword,\n        text: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"JWjT+xUQq/A9mAzjrLEDLro8fPc=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useContext","useEffect","useReducer","useState","Card","classes","Button","Context1","Inputs","jsxDEV","_jsxDEV","ACTION","INPUT_CHANGE","INPUT_ISVALID","reducerEmail","emailState","action","type","value","Payload","value1","isValid","includes","reducerPassword","passwordState","value2","trim","length","Login","_s","ctx","dispatchEmail","dispatchPassword","formIsValid","setFormIsValid","emailChangeHandler","event","target","passwordChangeHandler","onBlurHandlerEmail","onBlurHandlerPassword","forEmailValid","forpasswordValid","console","log","timeoutID","setTimeout","clearTimeout","submitHandler","preventDefault","loginHandler","className","login","children","onSubmit","StateType","htmlfor","typ","idd","ChangeHandler","onBlur","text","fileName","_jsxFileName","lineNumber","columnNumber","actions","btn","_c","$RefreshReg$"],"sources":["C:/Users/Abdul/Masaüstü/01-starting-project/src/components/Login/Login.js"],"sourcesContent":["import React, { useContext, useEffect, useReducer, useState } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { Context1 } from \"../store/Store\";\nimport Inputs from \"./Inputs\";\n\nconst ACTION = {\n  INPUT_CHANGE: \"input_change\",\n  INPUT_ISVALID: \"input_isValid\",\n};\n\nconst reducerEmail = (emailState, action) => {\n  switch (action.type) {\n    case ACTION.INPUT_CHANGE: {\n      return {\n        value: action.Payload.value1,\n        isValid: action.Payload.value1.includes(\"@\"),\n      };\n    }\n    case ACTION.INPUT_ISVALID: {\n      return {\n        value: emailState.value,\n        isValid: emailState.value.includes(\"@\"),\n      };\n    }\n    default:\n      return { value: \"\", isValid: false };\n  }\n};\n\nconst reducerPassword = (passwordState, action) => {\n  switch (action.type) {\n    case ACTION.INPUT_CHANGE:\n      return {\n        value: action.Payload.value2,\n        isValid: action.Payload.value2.trim().length > 6,\n      };\n    case ACTION.INPUT_ISVALID:\n      return {\n        value: passwordState.value,\n        isValid: passwordState.value.trim().length > 6,\n      };\n    default:\n      return { value: \"\", isValid: false };\n  }\n};\n\nconst Login = () => {\n  const ctx = useContext(Context1);\n\n  const [emailState, dispatchEmail] = useReducer(reducerEmail, {\n    value: \"\",\n    isValid: null,\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(reducerPassword, {\n    value: \"\",\n    isValid: null,\n  });\n\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({\n      type: ACTION.INPUT_CHANGE,\n      Payload: { value1: event.target.value },\n    });\n    // setEnteredEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = (event) => {\n    // setEnteredPassword(event.target.value);\n    dispatchPassword({\n      type: ACTION.INPUT_CHANGE,\n      Payload: { value2: event.target.value },\n    });\n  };\n\n  const onBlurHandlerEmail = () => {\n    dispatchEmail({ type: ACTION.INPUT_ISVALID });\n  };\n  const onBlurHandlerPassword = () => {\n    dispatchPassword({ type: ACTION.INPUT_ISVALID });\n  };\n\n  const { isValid: forEmailValid } = emailState;\n  const { isValid: forpasswordValid } = passwordState;\n\n  useEffect(() => {\n    console.log(\"time1\");\n\n    const timeoutID = setTimeout(() => {\n      console.log(\"time2\");\n      setFormIsValid(forEmailValid && forpasswordValid);\n    }, 100);\n\n    return () => {\n      console.log(\"returnPart\");\n      clearTimeout(timeoutID);\n    };\n  }, [forEmailValid, forpasswordValid]);\n\n  // const validatePasswordHandler = () => {\n  //   // setPasswordIsValid(enteredPassword.trim().length > 6);\n  //   dispatchPassword({ type: ACTION.INPUT_ISVALID });\n  // };\n\n  // const validateEmailHandler = () => {\n  //   dispatchEmail({ type: ACTION.INPUT_ISVALID });\n  //   // setEmailIsValid(emailState.value.includes(\"@\"));\n  // };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (forEmailValid && forpasswordValid) {\n      ctx.loginHandler(emailState.value, passwordState.value);\n    } else if (!forEmailValid) {\n    }\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Inputs\n          StateType={emailState}\n          htmlfor=\"email\"\n          typ=\"email\"\n          idd=\"email\"\n          ChangeHandler={emailChangeHandler}\n          onBlur={onBlurHandlerEmail}\n          text=\"E-mail\"\n        />\n\n        <Inputs\n          StateType={passwordState}\n          htmlfor=\"password\"\n          typ=\"password\"\n          idd=\"password\"\n          ChangeHandler={passwordChangeHandler}\n          onBlur={onBlurHandlerPassword}\n          text=\"Password\"\n        />\n\n        {/* <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            // onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            // onBlur={validatePasswordHandler}\n          />\n        </div> */}\n\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAE1E,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,MAAM,GAAG;EACbC,YAAY,EAAE,cAAc;EAC5BC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,YAAY,GAAGA,CAACC,UAAU,EAAEC,MAAM,KAAK;EAC3C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKN,MAAM,CAACC,YAAY;MAAE;QACxB,OAAO;UACLM,KAAK,EAAEF,MAAM,CAACG,OAAO,CAACC,MAAM;UAC5BC,OAAO,EAAEL,MAAM,CAACG,OAAO,CAACC,MAAM,CAACE,QAAQ,CAAC,GAAG;QAC7C,CAAC;MACH;IACA,KAAKX,MAAM,CAACE,aAAa;MAAE;QACzB,OAAO;UACLK,KAAK,EAAEH,UAAU,CAACG,KAAK;UACvBG,OAAO,EAAEN,UAAU,CAACG,KAAK,CAACI,QAAQ,CAAC,GAAG;QACxC,CAAC;MACH;IACA;MACE,OAAO;QAAEJ,KAAK,EAAE,EAAE;QAAEG,OAAO,EAAE;MAAM,CAAC;EACxC;AACF,CAAC;AAED,MAAME,eAAe,GAAGA,CAACC,aAAa,EAAER,MAAM,KAAK;EACjD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKN,MAAM,CAACC,YAAY;MACtB,OAAO;QACLM,KAAK,EAAEF,MAAM,CAACG,OAAO,CAACM,MAAM;QAC5BJ,OAAO,EAAEL,MAAM,CAACG,OAAO,CAACM,MAAM,CAACC,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG;MACjD,CAAC;IACH,KAAKhB,MAAM,CAACE,aAAa;MACvB,OAAO;QACLK,KAAK,EAAEM,aAAa,CAACN,KAAK;QAC1BG,OAAO,EAAEG,aAAa,CAACN,KAAK,CAACQ,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG;MAC/C,CAAC;IACH;MACE,OAAO;QAAET,KAAK,EAAE,EAAE;QAAEG,OAAO,EAAE;MAAM,CAAC;EACxC;AACF,CAAC;AAED,MAAMO,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,GAAG,GAAG9B,UAAU,CAACO,QAAQ,CAAC;EAEhC,MAAM,CAACQ,UAAU,EAAEgB,aAAa,CAAC,GAAG7B,UAAU,CAACY,YAAY,EAAE;IAC3DI,KAAK,EAAE,EAAE;IACTG,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAM,CAACG,aAAa,EAAEQ,gBAAgB,CAAC,GAAG9B,UAAU,CAACqB,eAAe,EAAE;IACpEL,KAAK,EAAE,EAAE;IACTG,OAAO,EAAE;EACX,CAAC,CAAC;;EAEF;EACA;EACA;EACA;;EAEA,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMgC,kBAAkB,GAAIC,KAAK,IAAK;IACpCL,aAAa,CAAC;MACZd,IAAI,EAAEN,MAAM,CAACC,YAAY;MACzBO,OAAO,EAAE;QAAEC,MAAM,EAAEgB,KAAK,CAACC,MAAM,CAACnB;MAAM;IACxC,CAAC,CAAC;IACF;EACF,CAAC;;EAED,MAAMoB,qBAAqB,GAAIF,KAAK,IAAK;IACvC;IACAJ,gBAAgB,CAAC;MACff,IAAI,EAAEN,MAAM,CAACC,YAAY;MACzBO,OAAO,EAAE;QAAEM,MAAM,EAAEW,KAAK,CAACC,MAAM,CAACnB;MAAM;IACxC,CAAC,CAAC;EACJ,CAAC;EAED,MAAMqB,kBAAkB,GAAGA,CAAA,KAAM;IAC/BR,aAAa,CAAC;MAAEd,IAAI,EAAEN,MAAM,CAACE;IAAc,CAAC,CAAC;EAC/C,CAAC;EACD,MAAM2B,qBAAqB,GAAGA,CAAA,KAAM;IAClCR,gBAAgB,CAAC;MAAEf,IAAI,EAAEN,MAAM,CAACE;IAAc,CAAC,CAAC;EAClD,CAAC;EAED,MAAM;IAAEQ,OAAO,EAAEoB;EAAc,CAAC,GAAG1B,UAAU;EAC7C,MAAM;IAAEM,OAAO,EAAEqB;EAAiB,CAAC,GAAGlB,aAAa;EAEnDvB,SAAS,CAAC,MAAM;IACd0C,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IAEpB,MAAMC,SAAS,GAAGC,UAAU,CAAC,MAAM;MACjCH,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACpBV,cAAc,CAACO,aAAa,IAAIC,gBAAgB,CAAC;IACnD,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAM;MACXC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MACzBG,YAAY,CAACF,SAAS,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,CAACJ,aAAa,EAAEC,gBAAgB,CAAC,CAAC;;EAErC;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,MAAMM,aAAa,GAAIZ,KAAK,IAAK;IAC/BA,KAAK,CAACa,cAAc,CAAC,CAAC;IACtB,IAAIR,aAAa,IAAIC,gBAAgB,EAAE;MACrCZ,GAAG,CAACoB,YAAY,CAACnC,UAAU,CAACG,KAAK,EAAEM,aAAa,CAACN,KAAK,CAAC;IACzD,CAAC,MAAM,IAAI,CAACuB,aAAa,EAAE,CAC3B;EACF,CAAC;EAED,oBACE/B,OAAA,CAACN,IAAI;IAAC+C,SAAS,EAAE9C,OAAO,CAAC+C,KAAM;IAAAC,QAAA,eAC7B3C,OAAA;MAAM4C,QAAQ,EAAEN,aAAc;MAAAK,QAAA,gBAC5B3C,OAAA,CAACF,MAAM;QACL+C,SAAS,EAAExC,UAAW;QACtByC,OAAO,EAAC,OAAO;QACfC,GAAG,EAAC,OAAO;QACXC,GAAG,EAAC,OAAO;QACXC,aAAa,EAAExB,kBAAmB;QAClCyB,MAAM,EAAErB,kBAAmB;QAC3BsB,IAAI,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,eAEFvD,OAAA,CAACF,MAAM;QACL+C,SAAS,EAAE/B,aAAc;QACzBgC,OAAO,EAAC,UAAU;QAClBC,GAAG,EAAC,UAAU;QACdC,GAAG,EAAC,UAAU;QACdC,aAAa,EAAErB,qBAAsB;QACrCsB,MAAM,EAAEpB,qBAAsB;QAC9BqB,IAAI,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eA+BFvD,OAAA;QAAKyC,SAAS,EAAE9C,OAAO,CAAC6D,OAAQ;QAAAb,QAAA,eAC9B3C,OAAA,CAACJ,MAAM;UAACW,IAAI,EAAC,QAAQ;UAACkC,SAAS,EAAE9C,OAAO,CAAC8D,GAAI;UAAAd,QAAA,EAAC;QAE9C;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEX,CAAC;AAACpC,EAAA,CA1IID,KAAK;AAAAwC,EAAA,GAALxC,KAAK;AA4IX,eAAeA,KAAK;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}